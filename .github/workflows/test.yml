name: Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 6
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.12]
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install uv
        uv venv
    - name: Activate venv and install dependencies (Unix)
      if: runner.os != 'Windows'
      run: |
        . .venv/bin/activate
        uv pip install .[dev]
    - name: Activate venv and install dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        .venv\Scripts\activate
        uv pip install .[dev]
    - name: Run Tests (Unix)
      if: runner.os != 'Windows'
      run: |
        . .venv/bin/activate
        make test
    - name: Run Tests (Windows)
      if: runner.os == 'Windows'
      run: |
        .venv\Scripts\activate
        python -m unittest tests.test_integration -v
